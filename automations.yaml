- id: Alert if it is time to stop feeding the Koi
  hide_entity: true
  alias: Alert if it is time to stop feeding the Koi
  trigger:
    - platform: state
      entity_id: binary_sensor.pond_feeding_status
      from: 'off'
      to: 'on'
      for:
        hours: 6
  action:
    - service: notify.twilio_sms
      data:
        message: "The water temperature is no longer safe to feed the Koi fish."
        target: !secret both_phones

- id: Alert if it is safe to feed the Koi
  hide_entity: true
  alias: Alert if it is safe to start feeding the Koi
  trigger:
    - platform: state
      entity_id: binary_sensor.pond_feeding_status
      from: 'on'
      to: 'off'
      for:
        hours: 6
  action:
    - service: notify.twilio_sms
      data:
        message: "Water temperatures indicate it is not safe to resume feeding the Koi fish."
        target: !secret both_phones
        
- id: Alert if Back door is left open for more than 15 minutes
  hide_entity: true
  alias: Alert if Back Door is Left Open
  trigger:
    - platform: state
      entity_id: sensor.backdoor
      to: 'open'
      for:
        minutes: 15
  action:
    - service: notify.twilio_sms
      data:
        message: "The Back door has been left open for 15 minutes. Please close the back door."
        target: !secret both_phones

- id: Alert if Front door is left open for more than 90 seconds
  hide_entity: true
  alias: Alert if Front Door is Left Open
  trigger:
    - platform: state
      entity_id: sensor.frontdoor
      to: 'open'
      for:
        seconds: 120
  action:
    - service: notify.twilio_sms
      data:
        message: "The Front door has been left open for 2 minutes. Please close the front door."
        target: !secret both_phones

- id: Alert if Side door is left open for more than 15 minutes
  hide_entity: true
  alias: Alert if Side Door is Left Open
  trigger:
    - platform: state
      entity_id: sensor.sidedoor
      to: 'open'
      for:
        minutes: 15
  action:
    - service: notify.twilio_sms
      data:
        message: "The Side door has been left open for 15 minutes. Please close the side door."
        target: !secret both_phones

      
- id: Push Automatic Events to MQTT ignition:on
  hide_entity: true
  alias: Push Automatic Events to MQTT ignition:on
  trigger:
    - platform: event
      event_type: automatic_update
      event_data:
        type: "ignition:on"
  action:
    - service: mqtt.publish
      data_template:
        topic: '/car/ignition'
        retain: true
        payload: >
          {
              "type" : "{{ trigger.event.data['type'] }}",
              "created_at" : "{{ trigger.event.data['created_at'] }}",
              "location" : {
                  "lat" : {{ trigger.event.data['location']['lat'] }}
                  "lon" : {{ trigger.event.data['location']['lon'] }}
                  "accuracy_m" : {{ trigger.event.data['location']['accuracy_m'] }}
                  "created_at" : "{{ trigger.event.data['location']['created_at'] }}"
              }
          }
        
- id: Push Automatic Events to MQTT ignition:off
  hide_entity: true
  alias: Push Automatic Events to MQTT ignition:off
  trigger:
    - platform: event
      event_type: automatic_update
      event_data:
        type: "ignition:off"
  action:
    - service: mqtt.publish
      data_template:
        topic: '/car/ignition'
        retain: true
        payload: >
          {
              "type" : "{{ trigger.event.data['type'] }}",
              "created_at" : "{{ trigger.event.data['created_at'] }}",
              "location" : {
                  "lat" : {{ trigger.event.data['location']['lat'] }}
                  "lon" : {{ trigger.event.data['location']['lon'] }}
                  "accuracy_m" : {{ trigger.event.data['location']['accuracy_m'] }}
                  "created_at" : "{{ trigger.event.data['location']['created_at'] }}"
              }
          }
          
- id: Push Automatic Events to MQTT speeding
  hide_entity: true
  alias: Push Automatic Events to MQTT speeding
  trigger:
    - platform: event
      event_type: automatic_update
      event_data:
        type: "notification:speeding"
  action:
    - service: mqtt.publish
      data_template:
        topic: '/car/status'
        payload: >
          {
              "type" : "{{ trigger.event.data['type'] }}",
              "created_at" : "{{ trigger.event.data['created_at'] }}",
              "location" : {
                  "lat" : {{ trigger.event.data['location']['lat'] }}
                  "lon" : {{ trigger.event.data['location']['lon'] }}
                  "accuracy_m" : {{ trigger.event.data['location']['accuracy_m'] }}
                  "created_at" : "{{ trigger.event.data['location']['created_at'] }}"
              }
          }
          
- id: Push Automatic Events to MQTT hard_brake
  hide_entity: true
  alias: Push Automatic Events to MQTT hard_brake
  trigger:
    - platform: event
      event_type: automatic_update
      event_data:
        type: "notification:hard_brake"
  action:
    - service: mqtt.publish
      data_template:
        topic: '/car/status'
        retain: true
        payload: >
          {
              "type" : "{{ trigger.event.data['type'] }}",
              "created_at" : "{{ trigger.event.data['created_at'] }}",
              "location" : {
                  "lat" : {{ trigger.event.data['location']['lat'] }}
                  "lon" : {{ trigger.event.data['location']['lon'] }}
                  "accuracy_m" : {{ trigger.event.data['location']['accuracy_m'] }}
                  "created_at" : "{{ trigger.event.data['location']['created_at'] }}"
              }
          }
          
- id: Push Automatic Events to MQTT hard_accel
  hide_entity: true
  alias: Push Automatic Events to MQTT hard_accel
  trigger:
    - platform: event
      event_type: automatic_update
      event_data:
        type: "notification:hard_accel"
  action:
    - service: mqtt.publish
      data_template:
        topic: '/car/status'
        retain: true
        payload: >
          {
              "type" : "{{ trigger.event.data['type'] }}",
              "created_at" : "{{ trigger.event.data['created_at'] }}",
              "location" : {
                  "lat" : {{ trigger.event.data['location']['lat'] }}
                  "lon" : {{ trigger.event.data['location']['lon'] }}
                  "accuracy_m" : {{ trigger.event.data['location']['accuracy_m'] }}
                  "created_at" : "{{ trigger.event.data['location']['created_at'] }}"
              }
          }
          
- id: Activate Morning Mode At Sunrise
  alias: Activate Morning Mode At Sunrise
  hide_entity: true
  trigger:
    platform: sun
    event: sunrise
  action:
    - service: script.morning_mode

- id: Activate Office Desk Lamp on Dash Button Push
  alias: Activate Office Desk Lamp on Dash Button Push
  hide_entity: true
  trigger:
    platform: mqtt
    topic: '/button/office-desklamp'
    payload: 'active'
  action:
    - service: switch.toggle
      entity_id: switch.office_desk_lamp
    - service: automation.turn_off
      entity_id: automation.activate_office_desk_lamp_on_dash_button_push
      
- id: Restore automation for Office Desk Lamp From Dash Button
  alias: Restore automation for Office Desk Lamp From Dash Button
  hide_entity: true
  trigger:
    platform: state
    entity_id: automation.activate_office_desk_lamp_on_dash_button_push
    from: 'on'
    to: 'off'
    for:
      seconds: 8
  action:
    - service: automation.turn_on
      entity_id: automation.activate_office_desk_lamp_on_dash_button_push

- id: Activate Workshop Exhaust on Dash Button Push
  alias: Activate Workshop Exhaust Mode on Dash Button Push
  hide_entity: true
  trigger:
    platform: mqtt
    topic: '/button/workshop-exhaust'
    payload: 'active'
  action:
    - service: switch.toggle
      entity_id: switch.workshop_exhaust
    - service: automation.turn_off
      entity_id: automation.activate_workshop_exhaust_mode_on_dash_button_push
      
- id: Restore automation for Workshop Exhaust From Dash Button
  alias: Restore automation for Workshop Exhaust From Dash Button
  hide_entity: true
  trigger:
    platform: state
    entity_id: automation.activate_workshop_exhaust_mode_on_dash_button_push
    from: 'on'
    to: 'off'
    for:
      seconds: 8
  action:
    - service: automation.turn_on
      entity_id: automation.activate_workshop_exhaust_mode_on_dash_button_push
      
- id: Activate Workshop Light on Dash Button Push
  alias: Activate Workshop Mode on Dash Button Push
  hide_entity: true
  trigger:
    platform: mqtt
    topic: '/button/workshop-light'
    payload: 'active'
  action:
    - service: switch.toggle
      entity_id: switch.workshop_lights
    - service: automation.turn_off
      entity_id: automation.activate_workshop_mode_on_dash_button_push
      
- id: Restore automation for Workshop Lights From Dash Button
  alias: Restore automation for Workshop Lights From Dash Button
  hide_entity: true
  trigger:
    platform: state
    entity_id: automation.activate_workshop_mode_on_dash_button_push
    from: 'on'
    to: 'off'
    for:
      seconds: 8
  action:
    - service: automation.turn_on
      entity_id: automation.activate_workshop_mode_on_dash_button_push
      
- id: Activate Bedtime Mode on Dash Buttton Push After Sunrise
  alias: Activate Bedtime Mode on Dash Button Push After Sunrise
  hide_entity: true
  trigger:
    platform: mqtt
    topic: '/button/bedtime'
    payload: 'active'
  condition:
    condition: and
    conditions:
      - condition: sun
        after: sunrise
  action:
    - service: script.all_off
    - service: automation.turn_off
      entity_id: automation.activate_bedtime_mode_on_dash_button_push_after_sunrise

- id: Restore automation for Bedtime Mode From Dash Button After Sunrise
  alias: Restore automation for Bedtime Mode From Dash Button After Sunrise
  hide_entity: true
  trigger:
    platform: state
    entity_id: automation.activate_bedtime_mode_on_dash_button_push_after_sunrise
    from: 'on'
    to: 'off'
    for:
      seconds: 8
  action:
    - service: automation.turn_on
      entity_id: automation.activate_bedtime_mode_on_dash_button_push_after_sunrise
      
- id: Activate Bedtime Mode on Dash Buttton Push
  alias: Activate Bedtime Mode on Dash Button Push
  hide_entity: true
  trigger:
    platform: mqtt
    topic: '/button/bedtime'
    payload: 'active'
  condition:
    condition: and
    conditions:
      - condition: sun
        before: sunrise
  action:
    - service: script.bedtime_mode
    - service: automation.turn_off
      entity_id: automation.activate_bedtime_mode_on_dash_button_push

- id: Restore automation for Bedtime Mode From Dash Button
  alias: Restore automation for Bedtime Mode From Dash Button
  hide_entity: true
  trigger:
    platform: state
    entity_id: automation.activate_bedtime_mode_on_dash_button_push
    from: 'on'
    to: 'off'
    for:
      seconds: 8
  action:
    - service: automation.turn_on
      entity_id: automation.activate_bedtime_mode_on_dash_button_push
      
- id: Toggle Grow Lights on Dash Button Push
  alias: Toggle Grow Lights on Dash Button Push
  hide_entity: true
  trigger:
    platform: mqtt
    topic: '/button/grow-lights'
    payload: 'active'
  action:
    - service: switch.toggle
      entity_id: switch.grow_lights
    - service: automation.turn_off
      entity_id: automation.toggle_grow_lights_on_dash_button_push
      
- id: Restore automation for grow lights dash button
  alias: Restore automation for grow lights dash button
  hide_entity: true
  trigger:
    platform: state
    entity_id: automation.toggle_grow_lights_on_dash_button_push
    from: 'on'
    to: 'off'
    for:
      seconds: 8
  action:
    - service: automation.turn_on
      entity_id: automation.toggle_grow_lights_on_dash_button_push
  
- id: Automatically Add to Poo Counter on Dash Button Push
  alias: Automatically Add to Poo Counter on Dash Button Push
  hide_entity: true
  trigger:
    platform: mqtt
    topic: '/button/poo-tracker'
    payload: 'active'
  action:
    - service: shell_command.send_to_google_sheets
      data_template: 
        sheet_id: !secret pet_tracker_sheet_id
        key1: "poo"
    - service: automation.turn_off
      entity_id: automation.automatically_add_to_poo_counter_on_dash_button_push

- id: Restore automatically_add_to_poo_counter_on_dash_button_push automation
  alias: Restore automation.automatically_add_to_poo_counter_on_dash_button_push automation
  hide_entity: true
  trigger:
    platform: state
    entity_id: automation.automatically_add_to_poo_counter_on_dash_button_push
    from: 'on'
    to: 'off'
    for:
      seconds: 8
  action:
    - service: automation.turn_on
      entity_id: automation.automatically_add_to_poo_counter_on_dash_button_push
      
- id: Automatically Add to Pee Counter on Dash Button Push
  alias: Automatically Add to Pee Counter on Dash Button Push
  hide_entity: true
  trigger:
    platform: mqtt
    topic: '/button/pee-tracker'
    payload: 'active'
  action:
    - service: shell_command.send_to_google_sheets
      data_template: 
        sheet_id: !secret pet_tracker_sheet_id
        key1: "pee"
    - service: automation.turn_off
      entity_id: automation.automatically_add_to_pee_counter_on_dash_button_push
    
- id: Restore automatically_add_to_pee_counter_on_dash_button_push automation
  alias: Restore automation.automatically_add_to_pee_counter_on_dash_button_push automation
  hide_entity: true
  trigger:
    platform: state
    entity_id: automation.automatically_add_to_pee_counter_on_dash_button_push
    from: 'on'
    to: 'off'
    for:
      seconds: 8
  action:
    - service: automation.turn_on
      entity_id: automation.automatically_add_to_pee_counter_on_dash_button_push
      
- id: Automatically Activate Pond on Dash Button Push
  alias: Automatically Activate Pond on Dash Button Push
  hide_entity: true
  trigger:
    platform: mqtt
    topic: '/button/waterfall-activate'
    payload: 'active'
  action:
    - service: homeassistant.toggle
      entity_id: input_boolean.enable_waterfall
    - service: automation.turn_off
      entity_id: automation.automatically_activate_pond_on_dash_button_push

- id: Restore automatically_activate_pond_on_dash_button_push automation
  alias: Restore automatically_activate_pond_on_dash_button_push automation
  hide_entity: true
  trigger:
    platform: state
    entity_id: automation.automatically_activate_pond_on_dash_button_push
    from: 'on'
    to: 'off'
    for:
      seconds: 8
  action:
    - service: automation.turn_on
      entity_id: automation.automatically_activate_pond_on_dash_button_push

- id: Toggle Back Porch Lights on Dash Push
  alias: Toggle Back Porch Lights on Dash Push
  hide_entity: true
  trigger:
    platform: mqtt
    topic: '/button/backyard-lights'
    payload: 'active'
  action:
    - service: switch.toggle
      entity_id: switch.back_porch
    - service: automation.turn_off
      entity_id: automation.toggle_back_porch_lights_on_dash_push

- id: Restore toggle_back_porch_lights_on_dash_push automation
  alias: Restore toggle_back_porch_lights_on_dash_push automation
  hide_entity: true
  trigger:
    platform: state
    entity_id: automation.toggle_back_porch_lights_on_dash_push
    from: 'on'
    to: 'off'
    for:
      seconds: 8
  action:
    - service: automation.turn_on
      entity_id: automation.toggle_back_porch_lights_on_dash_push

- id: Bar Lights On
  alias: Bar Lights On
  hide_entity: true
  trigger:
    platform: sun
    event: sunset
    offset: "-01:00:00" 
  action:
    service: switch.turn_on
    entity_id: switch.bar_lights

- id: Bar Lights Off
  alias: Bar Lights Off
  hide_entity: true
  trigger:
    platform: time
    at: '03:00:00'
  action:
    service: switch.turn_off
    entity_id: switch.bar_lights

- id: Icemaker Off
  alias: Icemaker Off
  hide_entity: true
  trigger:
    platform: time
    at: '03:00:00'
  action:
    service: switch.turn_off
    entity_id: switch.ice_machine

- id: Icemaker On
  alias: Icemaker On
  hide_entity: true
  trigger:
    platform: time
    at: '03:01:00'
  action:
    service: switch.turn_on
    entity_id: switch.ice_machine

- id: Diana Chiller On
  alias: Diana Chiller On
  hide_entity: true
  trigger:
    platform: numeric_state
    entity_id: sensor.diana_tank_temperature
    above: 62
  action:
    - service: switch.turn_on
      entity_id: switch.diana_chiller

- id: Diana Chiller Off
  alias: Diana Chiller Off
  hide_entity: true
  trigger:
    platform: numeric_state
    entity_id: sensor.diana_tank_temperature
    below: 62
  action:
    - service: switch.turn_off
      entity_id: switch.diana_chiller

- id: Freshwater Sump Light On
  alias: Freshwater Sump Light On
  hide_entity: true
  trigger:
    platform: time
    at: '08:00:00' 
  action:
    service: switch.turn_on
    entity_id: switch.freshwater_sump_light_7

- id: Freshwater Sump Light Off
  alias: Freshwater Sump Light Off
  hide_entity: true
  trigger:
    platform: time
    at: '23:00:00'
  action:
    service: switch.turn_off
    entity_id: switch.freshwater_sump_light_7

- id: Grow Light On
  alias: Grow Lights On
  hide_entity: true
  trigger:
    platform: time
    at: '08:00:00' 
  action:
    service: switch.turn_on
    entity_id: switch.grow_lights

- id: Grow Light Off
  alias: Grow Lights Off
  hide_entity: true
  trigger:
    platform: time
    at: '02:00:00'
  action:
    service: switch.turn_off
    entity_id: switch.grow_lights

- id: Protein Skimmer On
  alias: Protein Skimmer On
  hide_entity: true
  trigger:
    platform: time
    at: '15:00:00' 
  action:
    service: switch.turn_on
    entity_id: switch.protein_skimmer_3

- id: Protein Skimmer Off
  alias: Protein Skimmer Off
  hide_entity: true
  trigger:
    platform: time
    at: '18:00:00'
  action:
    service: switch.turn_off
    entity_id: switch.protein_skimmer_3

- id: Saltwater Lights On
  alias: Saltwater Lights On
  hide_entity: true
  trigger:
    platform: time
    at: '08:00:00' 
  action:
    service: switch.turn_on
    entity_id: switch.saltwater_lights

- id: Saltwater Lights Off
  alias: Saltwater Lights Off
  hide_entity: true
  trigger:
    platform: time
    at: '03:00:00'
  action:
    service: switch.turn_off
    entity_id: switch.saltwater_lights

- id: Freshwater Display Lights On
  alias: Freshwater Display Lights On
  hide_entity: true
  trigger:
    platform: time
    at: '10:00:00'
  action:
    service: switch.turn_on
    entity_id: switch.freshwater_tank_lights

- id: Freshwater Display Lights Off
  alias: Freshwater Display Lights Off
  hide_entity: true
  trigger:
    platform: time
    at: '02:00:00'
  action:
    service: switch.turn_off
    entity_id: switch.freshwater_tank_lights

- id: Turtle Heat Lamp On
  alias: Turtle Heat Lamp On
  trigger:
    platform: time
    at: '07:00:00'
  action:
    service: switch.turn_on
    entity_id: switch.freshwater_turtle_lights

- id: Turtle Heat Lamp Off
  alias: Turtle Heat Lamp off
  trigger:
    platform: time
    at: '18:00:00'
  action:
    service: switch.turn_off
    entity_id: switch.freshwater_turtle_lights
    
- id: Saltwater Sump Light On
  alias: Saltwater Sump Light On
  hide_entity: true
  trigger:
    platform: time
    at: '10:00:00' 
  action:
    service: switch.turn_on
    entity_id: switch.saltwater_sump_light_6

- id: Saltwater Sump Light Off
  alias: Saltwater Sump Light Off
  hide_entity: true
  trigger:
    platform: time
    at: '22:00:00'
  action:
    service: switch.turn_off
    entity_id: switch.saltwater_sump_light_6

- id: Saltwater UV Purifier On
  alias: Saltwater UV Purifier On
  hide_entity: true
  trigger:
    platform: time
    at: '15:00:00' 
  action:
    service: switch.turn_on
    entity_id: switch.saltwater_uv

- id: Saltwater UV Purifier Off
  alias: Saltwater UV Purifier Off
  hide_entity: true
  trigger:
    platform: time
    at: '18:00:00'
  action:
    service: switch.turn_off
    entity_id: switch.saltwater_uv

- id: Wavemakers
  alias: Wavemakers
  trigger:
    platform: time
    minutes: "/2"
    seconds: 00
  action:
    - service: switch.toggle
      entity_id: switch.wavemaker_1
    - service: switch.toggle
      entity_id: switch.wavemaker_2

- id: Turn Porch Light On At Sunset
  alias: Porch Light On At Sunset
  hide_entity: true
  trigger:
    platform: sun
    event: sunset
    offset: "+00:00:00" 
  action:
    service: homeassistant.turn_on
    entity_id: light.front_porch

- id: Turn Porch Light Off At Sunrise
  alias: Porch Light Off At Sunrise
  hide_entity: true
  trigger:
    platform: sun
    event: sunrise
  action:
    service: homeassistant.turn_off
    entity_id: light.front_porch

- id: Push Sun Updates to MQTT
  alias: Push Sun Updates to MQTT
  hide_entity: true
  trigger:
    - platform: sun
      event: sunrise
      offset: '+00:00:00'
    - platform: sun
      event: sunset
      offset: '+00:00:00'
  action:
    - service: mqtt.publish
      data_template:
        topic: '/status/sun'
        retain: true
        payload: >
          {
            "sun" : "{{ states('sun.sun') }}"     
          } 

- id: Push Shipping Updates to MQTT
  alias: Push Shipping Updates to MQTT
  hide_entity: true
  trigger:
    - platform: state
      entity_id: sensor.ups_packages
    - platform: state
      entity_id: sensor.usps_packages_packages
    - platform: state
      entity_id: sensor.usps_packages_mail
    - platform: state
      entity_id: sensor.usps_out_for_delivery
    - platform: state
      entity_id: sensor.usps_picked_up_by_shipping_partner
    - platform: state
      entity_id: sensor.usps_arrived
    - platform: state
      entity_id: sensor.usps_departed_origin 
    - platform: state
      entity_id: sensor.usps_departed 
    - platform: state
      entity_id: sensor.usps_departed_usps_facility
    - platform: state
      entity_id: sensor.usps_item_accepted
    - platform: state
      entity_id: sensor.usps_departed_parter_facility
  action:
    - service: mqtt.publish
      data_template:
        topic: '/status/shipments'
        retain: true
        payload: >
          {
            "total_ups_packages" : {{ states('sensor.ups_packages') }},
            "total_usps_packages" : {{ states('sensor.usps_packages_packages') }},
            "usps_mail" : {{ states('sensor.usps_packages_mail') }},
            "usps_packages_out_for_delivery" : {{ states('sensor.usps_out_for_delivery') }},
            "usps_packages_picked_up_by_shipping_partner" : {{ states('sensor.usps_picked_up_by_shipping_partner') }},
            "usps_packages_arrived" : {{ states('sensor.usps_arrived') }},
            "usps_packages_departed_origin" : {{ states('sensor.usps_departed_origin') }},
            "usps_packages_departed" : {{ states('sensor.usps_departed') }},
            "usps_packages_departed_usps_facility" : {{ states('sensor.usps_departed_usps_facility') }},
            "usps_packages_item_accepted" : {{ states('sensor.usps_item_accepted') }},
            "usps_packages_departed_partner_facility" : {{ states('sensor.usps_departed_parter_facility') }}
          }
          
- id: Push Weather Updates to MQTT
  alias: Push Weather Updates to MQTT
  hide_entity: true
  trigger:
    - platform: state
      entity_id: sensor.dark_sky_apparent_temperature
    - platform: state
      entity_id: sensor.dark_sky_daily_high_apparent_temperature
    - platform: state
      entity_id: sensor.dark_sky_daily_high_temperature
    - platform: state
      entity_id: sensor.dark_sky_daily_low_apparent_temperature
    - platform: state
      entity_id: sensor.dark_sky_daily_low_temperature
    - platform: state
      entity_id: sensor.dark_sky_daily_max_precip_intensity
    - platform: state
      entity_id: sensor.dark_sky_humidity
    - platform: state
      entity_id: sensor.dark_sky_precip
    - platform: state
      entity_id: sensor.dark_sky_precip_intensity
    - platform: state
      entity_id: sensor.dark_sky_precip_probability
    - platform: state
      entity_id: sensor.dark_sky_temperature
    - platform: state
      entity_id: sensor.dark_sky_wind_speed
    - platform: state
      entity_id: sensor.dark_sky_cloud_coverage
  action:
    - service: mqtt.publish
      data_template:
        topic: '/status/weather'
        retain: true
        payload: >
          {
            "apparent_temperature" : {{ states('sensor.dark_sky_apparent_temperature') }},
            "daily_high_apparent_temperature" : {{ states('sensor.dark_sky_daily_high_apparent_temperature') }},
            "daily_high_temperature" : {{ states('sensor.dark_sky_daily_high_temperature') }},
            "daily_low_apparent_temperature" : {{ states('sensor.dark_sky_daily_low_apparent_temperature') }},
            "daily_low_temperature" : {{ states('sensor.dark_sky_daily_low_temperature') }},
            "daily_max_precip_intensity" : {{ states('sensor.dark_sky_daily_max_precip_intensity') }},
            "humidity" : {{ states('sensor.dark_sky_humidity') }},
            "precip" : "{{ states('sensor.dark_sky_precip') }}",
            "precip_intensity" : {{ states('sensor.dark_sky_precip_intensity') }},
            "precip_probability" : {{ states('sensor.dark_sky_precip_probability') }},
            "temperature" : {{ states('sensor.dark_sky_temperature') }},
            "wind_speed" : {{ states('sensor.dark_sky_wind_speed') }},
            "cloud_coverage" : {{ states('sensor.dark_sky_cloud_coverage') }},
            "sunset" : "{{ as_timestamp(states.sun.sun.attributes.next_setting)  | timestamp_custom("%I:%M %p") }}",
            "sunrise" : "{{ as_timestamp(states.sun.sun.attributes.next_rising)  | timestamp_custom("%I:%M %p") }}",
            "sun" : "{{ states('sun.sun') }}"     
          } 

- id: 3D Printer 1 Turn on Exhaust
  alias: 3D Printer 1 Turn on Exhaust
  trigger:
    platform: state
    entity_id: sensor.3dprinter1_state
    to: "Printing"
  action:
    - service: switch.turn_on
      entity_id: switch.workshop_exhaust
      
- id: 3D Printer 1 Turn Off Exhaust
  alias: 3d Printer 1 Turn Off Exhaust
  trigger:
    platform: state
    entity_id: sensor.3dprinter1_state
    to: "Operational"
  action:
    - service: switch.turn_off
      entity_id: switch.workshop_exhaust

- id: 3D Printer 2 Turn on Exhaust
  alias: 3D Printer 2 Turn on Exhaust
  trigger:
    platform: state
    entity_id: sensor.3dprinter2_state
    to: "Printing"
  action:
    - service: switch.turn_on
      entity_id: switch.workshop_exhaust
      
- id: 3D Printer 2 Turn Off Exhaust
  alias: 3d Printer 2 Turn Off Exhaust
  trigger:
    platform: state
    entity_id: sensor.3dprinter1_state
    to: "Operational"
  action:
    - service: switch.turn_off
      entity_id: switch.workshop_exhaust

- id: 3D Printer 1 Completion Notification
  alias: 3D Printer 1 Completion Notification
  trigger:
    platform: state
    entity_id: sensor.3dprinter1_state
    from: "Printing"
    to: "Operational"
  action:
    - service: notify.john_phone_sms
      data:
        message: "The 3D Print Job on Printer #1 Has Completed"

- id: 3D Printer 2 Completion Notification
  alias: 3D Printer 2 Completion Notification
  trigger:
    platform: state
    entity_id: sensor.3dprinter2_state
    from: "Printing"
    to: "Operational"
  action:
    - service: notify.john_phone_sms
      data:
        message: "The 3D Print Job on Printer #2 Has Completed"

- id: Push Octoprint Updates to MQTT (Printer 1)
  alias: Push Octoprint Updates to MQTT (Printer 1)
  hide_entity: true
  trigger:
    - platform: state
      entity_id: sensor.3dprinter1_state
    - platform: state
      entity_id: sensor.3dprinter1_percent_complete
    - platform: state
      entity_id: sensor.3dprinter1_percent_file
    - platform: event
      event_type: homeassistant_start
  action:
    - service: mqtt.publish
      data_template:
        topic: '/status/octoprint/1'
        retain: true
        payload: >
          {
            "current_state" : "{{ states('sensor.3dprinter1_state') }}",
            "job_percentage" : "{{ states('sensor.3dprinter1_percent_complete') }}",
            "file" : "{{ states('sensor.3dprinter1_percent_file') }}"
          } 

- id: Push Octoprint Updates to MQTT (Printer 2)
  alias: Push Octoprint Updates to MQTT (Printer 2)
  hide_entity: true
  trigger:
    - platform: state
      entity_id: sensor.3dprinter2_state
    - platform: state
      entity_id: sensor.3dprinter2_percent_complete
    - platform: state
      entity_id: sensor.3dprinter2_percent_file
    - platform: event
      event_type: homeassistant_start
  action:
    - service: mqtt.publish
      data_template:
        topic: '/status/octoprint/2'
        retain: true
        payload: >
          {
            "current_state" : "{{ states('sensor.3dprinter2_state') }}",
            "job_percentage" : "{{ states('sensor.3dprinter2_percent_complete') }}",
            "file" : "{{ states('sensor.3dprinter2_percent_file') }}"
          } 

- id: Turn On Pond Lights At Sunset
  alias: Turn On Pond Lights At Sunset
  hide_entity: true
  trigger:
    platform: sun
    event: sunset
    offset: "+00:00:00"
  action:
    - service: switch.turn_on
      entity_id: switch.pond_string_lights
    
- id: Turn Off Pond Lights at 2am
  alias: Turn Off Pond Lights at 2am
  hide_entity: true
  trigger:
    platform: time
    at: '02:00:00'
  action:
    - service: switch.turn_off
      entity_id: switch.pond_string_lights
    - service: switch.turn_off
      entity_id: switch.back_porch_lights
    - service: switch.turn_off
      entity_id: switch.back_porch_power

- id: Turn on Waterfall when enabled
  alias: Turn on Waterfall when enabled
  hide_entity: true
  trigger:
    platform: state
    entity_id: input_boolean.enable_waterfall
    from: 'off'
    to: 'on'
  condition:
    condition: or
    conditions:
      - condition: state
        entity_id: sensor.is_freezing_outside
        state: "not freezing"
      - condition: state
        entity_id: sensor.is_freezing_outside
        state: "unknown"
        
  action:
    service: switch.turn_on
    entity_id: switch.pond_waterfall_pump

- id: Turn off Waterfall when disabled
  alias: Turn off Waterfall when disabled
  hide_entity: true
  trigger:
    platform: state
    entity_id: input_boolean.enable_waterfall
    from: 'on'
    to: 'off'
  action:
    service: switch.turn_off
    entity_id: switch.pond_waterfall_pump
    
- id: Automatically Turn Off Pond after 60 minutes
  alias: Turn Off Pond After 60 minutes
  hide_entity: true
  trigger:
    platform: state
    entity_id: input_boolean.enable_waterfall
    from: 'off'
    to: 'on'
    for:
      hours: 1
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.enable_waterfall_automation
        state: 'on'
  action:
    service: homeassistant.turn_off
    entity_id: input_boolean.enable_waterfall

- id: Turn on the Garden Water at 5:00pm
  alias: Turn on the Garden Water at 5:00pm
  hide_entity: true
  trigger:
    - platform: time
      at: '17:00:00'
  condition:
    condition: and
    conditions:
      - condition: or
        conditions:
          - condition: state
            entity_id: sensor.is_raining
            state: "unknown"
          - condition: state
            entity_id: sensor.is_raining
            state: "not raining"
      - condition: or
        conditions:
          - condition: state
            entity_id: sensor.is_freezing_outside
            state: "not freezing"
          - condition: state
            entity_id: sensor.is_freezing_outside
            state: "unknown"
      - condition: state
        entity_id: input_boolean.enable_garden_irrigation
        state: 'on'
  action:
    service: switch.turn_on
    entity_id: switch.garden_soaker_pump
    
- id: Turn off the Garden Water at 5:20pm
  alias: Turn off the Garden Water at 5:20pm
  hide_entity: true
  trigger:
    - platform: time
      at: '17:20:00'
  action:
    service: switch.turn_off
    entity_id: switch.garden_soaker_pump

- id: Automate Pond Turn On at 55 mins past hour
  alias: Automatically Turn on at 55 mins past hour
  hide_entity: true
  trigger:
    - platform: time
      minutes: 55
      seconds: 00
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.enable_waterfall
        state: 'off'
      - condition: state
        entity_id: sensor.is_raining
        state: "not raining"
      - condition: or
        conditions:
          - condition: state
            entity_id: sensor.is_freezing_outside
            state: "not freezing"
          - condition: state
            entity_id: sensor.is_freezing_outside
            state: "unknown"
      - condition: state
        entity_id: input_boolean.enable_waterfall_automation
        state: 'on'
  action:
    service: switch.turn_on
    entity_id: switch.pond_waterfall_pump
    
- id: Automate Pond Turn off at 5 mins past hour
  alias: Automatically Turn off at 5 mins past hour
  hide_entity: true
  trigger:
    - platform: time
      minutes: 05
      seconds: 00
  condition: 
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.enable_waterfall
        state: 'off'
      - condition: state
        entity_id: input_boolean.enable_waterfall_automation
        state: 'on'
  action:
    service: switch.turn_off
    entity_id: switch.pond_waterfall_pump

- id: Turn on Kitchen Lights if motion is detected
  alias: Turn on Kitchen Lights if motion is detected
  hide_entity: true
  trigger:
    - platform: state
      entity_id: sensor.kitchen_pir
      to: 'on'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.enable_light_automation
        state: 'on'
  action:
    - service: light.turn_on
      entity_id: light.kitchen_center
    - service: light.turn_on
      entity_id: light.kitchen_doorway
    - service: light.turn_on
      entity_id: light.kitchen_sink

- id: Turn off Living Room if no occupancy detected for 60 minutes
  alias: Turn off Living Room if no occupancy detected for 60 minutes
  hide_entity: true
  trigger:
    - platform: state
      entity_id: binary_sensor.home_occupancy
      to: 'off'
      for:
        minutes: 60
  condition:
    condition: and
    conditions: 
      - condition: state
        entity_id: input_boolean.enable_light_automation
        state: 'on'
  action:
    - service: remote.turn_off
      entity_id: remote.living_room
    - service: light.turn_off
      entity_id: light.bar_light
    - service: light.turn_off
      entity_id: light.circle_chair
    - service: light.turn_off
      entity_id: light.couch

- id: Turn off Kitchen Lights if no occupancy detected for 15 minutes
  alias: Turn off Kitchen Lights if no occupancy detected for 15 minutes
  hide_entity: true
  trigger:
    - platform: state
      entity_id: sensor.kitchen_pir
      to: 'off'
      for:
        minutes: 15
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.enable_light_automation
        state: 'on'
  action:
    - service: light.turn_off
      entity_id: light.kitchen_center
    - service: light.turn_off
      entity_id: light.kitchen_doorway
    - service: light.turn_off
      entity_id: light.kitchen_sink
    - service: light.turn_off
      entity_id: light.dining_room_1
    - service: light.turn_off
      entity_id: light.dining_room_2
    - service: light.turn_off
      entity_id: light.dining_room_corner

- id: Turn on Hallway if motion detected
  alias: Turn on Hallway if motion detected
  hide_entity: true
  trigger:
    - platform: state
      entity_id: sensor.hallway_pir
      to: 'on'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.enable_light_automation
        state: 'on'
  action:
    - service: light.turn_on
      entity_id: light.hallway

- id: Turn off Hallway if no motion detected for 5 minutes
  alias: Turn off Hallway if no motion detected for 5 minutes
  hide_entity: true
  trigger:
    - platform: state
      entity_id: sensor.hallway_pir
      to: 'off'
      for:
        minutes: 15
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.enable_light_automation
        state: 'on'
  action:
    - service: light.turn_off
      entity_id: light.hallway

- id: Turn off Upstairs Bathroom if no motion detected for 90 minutes in hallway
  alias: Turn off Upstairs Bathroom if no motion detected for 90 minutes in hallway
  hide_entity: true
  trigger:
    - platform: state
      entity_id: sensor.hallway_pir
      to: 'off'
      for: 
        minutes: 90
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.enable_light_automation
        state: 'on'
  action:
    - service: light.turn_off
      entity_id: light.bathroom_1
    - service: light.turn_off
      entity_id: light.bathroom_2
    - service: light.turn_off
      entity_id: light.bathtub

- id: Turn off Bedroom lights if no occupancy detected
  alias: Turn off Bedroom lights if no occupancy detected
  hide_entity: true
  trigger:
    - platform: state
      entity_id: binary_sensor.bedroom_occupancy
      from: 'on'
      to: 'off'
      for:
        minutes: 2
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.enable_light_automation
        state: 'on'
  action:
    - service: light.turn_off
      entity_id: light.bedroom_1
    - service: light.turn_off
      entity_id: light.bedroom_2
    - service: light.turn_off
      entity_id: light.master_closet

- id: Turn On Office lights if occupancy detected
  alias: Turn on Office Lights if Occupancy Detected
  hide_entity: true
  trigger:
    - platform: state
      entity_id: binary_sensor.office_occupancy
      from: 'off'
      to: 'on'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.enable_light_automation
        state: 'on'
  action:
    - service: light.turn_on
      entity_id: light.office_one
    - service: light.turn_on
      entity_id: light.office_two

- id: Turn off Office lights if no occupancy detected
  alias: Turn off Office lights if no occupancy detected
  hide_entity: true
  trigger:
    - platform: state
      entity_id: binary_sensor.office_occupancy
      from: 'on'
      to: 'off'
      for:
        minutes: 2
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.enable_light_automation
        state: 'on'
  action:
    - service: light.turn_off
      entity_id: light.office_one
    - service: light.turn_off
      entity_id: light.office_two
    - service: switch.turn_off
      entity_id: switch.office_desk_lamp

#- id: Notify if VPN Failure
#  alias: VPN Failure Notification
#  hide_entity: true
#  trigger:
#    platform: state
#   entity_id: binary_sensor.vpn_safety_warning
#    from: 'off'
#    to: 'on'
#  action:
#    - service: notify.twilio_sms
#      data:
#        message: "I've detected the VPN is no longer protecting our network."
#        target: !secret both_phones

#- id: Notify of VPN Restoration
#  alias: VPN Restoration Notification
#  hide_entity: true
#  trigger:
#    platform: state
#    entity_id: binary_sensor.vpn_online
#    from: 'on'
#    to: 'off'
#  action:
#    - service: notify.twilio_sms
#      data:
#        message: "Good News! The VPN protecting our network has been restored."
#        target: !secret both_phones
    
